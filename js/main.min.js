"use strict";

window.onload = function () {
  var productionThumbs = new Swiper('.production-tumbs', {
    spaceBetween: 2,
    slidesPerView: 3,
    // loop: true,
    // freeMode: true,
    // loopedSlides: 5, //looped slides should be the same
    watchSlidesVisibility: true,
    watchSlidesProgress: true,
    breakpoints: {
      1471: {
        slidesPerView: 3,
        spaceBetween: 2
      },
      1081: {
        slidesPerView: 2,
        spaceBetween: 2
      }
    }
  });
  var productionTop = new Swiper('.production-slider', {
    spaceBetween: 0,
    // loop: true,
    // loopedSlides: 5, //looped slides should be the same
    navigation: {
      nextEl: '.production-button-next',
      prevEl: '.production-button-prev'
    },
    pagination: {
      el: '.production-pagination',
      clickable: true,
      renderBullet: function renderBullet(index, className) {
        return "<span class=\"".concat(className, "\">") + "0".concat(index + 1, "</span>");
      }
    },
    thumbs: {
      swiper: productionThumbs
    }
  });
  var equipmentSlider = new Swiper('.equipment-slider', {
    slidesPerView: 1,
    spaceBetween: 0,
    pagination: {
      el: '.equipment-pagination',
      clickable: true,
      renderBullet: function renderBullet(index, className) {
        return "<span class=\"".concat(className, "\">") + "0".concat(index + 1, "</span>");
      }
    },
    navigation: {
      nextEl: '.equipment-button-next',
      prevEl: '.equipment-button-prev'
    },
    breakpoints: {
      1081: {
        slidesPerView: 2,
        spaceBetween: 35
      }
    }
  });

  var tab = function tab() {
    var tabNav = document.querySelectorAll('.tabs-nav__item'),
        // Выбираем элементы навигации табов
    tabContent = document.querySelectorAll('.tabs-content__item'),
        // Выбираем самы табы
    tabName; // Переменная для имени таба
    // Проходим циклом по каждому элементу навигации и навешиваем обработчик клика, который вызывает функцию selectTabNav

    tabNav.forEach(function (item) {
      item.addEventListener('click', selectTabNav);
    });

    function selectTabNav() {
      tabNav.forEach(function (item) {
        // Удаляем активный класс у всех элементов навигации табов
        item.classList.remove('tabs-nav__item--active');
      });
      this.classList.add('tabs-nav__item--active'); // Добавляем активный укласс у элемента по которому кликнули

      tabName = this.getAttribute('data-tab-name'); // Получаем имя таба, который нам нужен

      selectTabContent(tabName); // Запускаем функцию, чтобы показать выбранный таб
    }

    function selectTabContent(tab) {
      // Проходим по всем табам и проверяем есть ли у элемента класс, равный имени таба(переменной tabName). Если есть, то добавляем класс активного таба, если нет, то удаляем этот класс
      tabContent.forEach(function (item) {
        var classList = item.classList;
        classList.contains(tab) ? classList.add('tabs-content__item--active') : classList.remove('tabs-content__item--active');
      });
    }
  };

  tab();
  var reviewsSlider = new Swiper('.reviews-slider', {
    slidesPerView: 1,
    spaceBetween: 0,
    pagination: {
      el: '.reviews-pagination',
      clickable: true,
      renderBullet: function renderBullet(index, className) {
        return "<span class=\"".concat(className, "\">") + "0".concat(index + 1, "</span>");
      }
    },
    navigation: {
      nextEl: '.reviews-button-next',
      prevEl: '.reviews-button-prev'
    },
    breakpoints: {
      1471: {
        slidesPerView: 2,
        spaceBetween: 30
      }
    }
  });
  var projectsSlider = new Swiper('.projects-slider', {
    slidesPerView: 1,
    effect: 'fade',
    pagination: {
      el: '.projects-pagination',
      clickable: true,
      renderBullet: function renderBullet(index, className) {
        return "<span class=\"".concat(className, "\">") + "0".concat(index + 1, "</span>");
      }
    },
    navigation: {
      nextEl: '.projects-button-next',
      prevEl: '.projects-button-prev'
    }
  });

  (function () {
    // breakpoint where swiper will be destroyed
    // and switches to a dual-column layout
    var breakpoint = window.matchMedia('(min-width: 1081px)'); // keep track of swiper instances to destroy later

    var mySwiper;

    var breakpointChecker = function breakpointChecker() {
      // if larger viewport and multi-row layout needed
      if (breakpoint.matches === true) {
        // clean up old instances and inline styles when available
        if (mySwiper !== undefined) mySwiper.destroy(true, true); // or/and do nothing
        // else if a small viewport and single column layout needed
      } else if (breakpoint.matches === false) {
        // fire small viewport version of swiper
        return sliderAdvantages();
      }
    };

    if (window.innerWidth <= 320 && mySwiper) {
      mySwiper.destroy(false);
    }

    var sliderAdvantages = function sliderAdvantages() {
      mySwiper = new Swiper('.catalog__list', {
        spaceBetween: 11,
        loop: true,
        slidesPerView: 1,
        centeredSlides: true,
        pagination: {
          el: '.catalog-pagination',
          clickable: true,
          renderBullet: function renderBullet(index, className) {
            return "<span class=\"".concat(className, "\">") + "0".concat(index + 1, "</span>");
          }
        },
        navigation: {
          nextEl: '.catalog-button-next',
          prevEl: '.catalog-button-prev'
        }
      });
    }; // keep an eye on viewport size changes


    breakpoint.addListener(breakpointChecker); // kickstart

    breakpointChecker();
  })();

  var need = function need() {
    var openBtn = document.querySelectorAll('.need__block-btn');
    var closeBtn = document.querySelectorAll('.need__info-close');
    var sidebar = document.querySelector('.need__left');
    var info = document.querySelectorAll('.need__info');
    var show = true;

    var closing = function closing() {
      openBtn.forEach(function (e) {
        e.innerHTML = 'Читать подробнее';
        e.classList.remove('need__block-btn--active');
      });
      info.forEach(function (e) {
        e.classList.remove('need__info--opened');
      });
      sidebar.classList.remove('need__left--transform');
    };

    openBtn.forEach(function (e) {
      e.addEventListener('click', function () {
        if (show) {
          openBtn.forEach(function (item) {
            item.innerHTML = 'Читать подробнее';
            item.classList.remove('need__block-btn--active');
          });
          e.innerHTML = 'Закрыть';
          e.classList.add('need__block-btn--active');
          info.forEach(function (e) {
            e.classList.remove('need__info--opened');
          });
          e.closest('.need__item').children[0].classList.add('need__info--opened');
          e.closest('.need__block').children[2].classList.add('need__info--opened');
          sidebar.classList.add('need__left--transform');
        } else {
          closing();
        }

        show = !show;
      });
    });
    closeBtn.forEach(function (e) {
      e.addEventListener('click', function () {
        closing();
      });
    });
  };

  need();
};
//# sourceMappingURL=data:application/json;charset=utf8;base64,
